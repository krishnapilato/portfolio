name: Deploy frontend

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  # Backend deployment steps are currently commented out as it is not ready.
  # Uncomment and configure once the backend is ready for deployment.
  # build-and-deploy-backend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Checkout the repository to the runner machine for subsequent operations.
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     # Set up Java Development Kit (JDK) version 23 using the Temurin distribution.
  #     - name: Set up JDK 23
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: 'temurin'
  #         java-version: '23'

  #     # Cache Maven dependencies to speed up builds by reusing previously downloaded libraries.
  #     - name: Cache Maven dependencies
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.m2
  #         key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-maven-

  #     # Compile the code, run tests, and package the backend using Maven.
  #     - name: Build and Verify with Maven
  #       working-directory: backend/java
  #       run: mvn clean install -DskipTests

  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the runner machine for subsequent operations.
      - name: Checkout repository
        uses: actions/checkout@v5

      # Cache Node.js dependencies to avoid re-installing them on each run.
      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: frontend/angular/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/angular/package-lock.json') }}-v2
          restore-keys: |
            ${{ runner.os }}-node-

      # Set up Node.js version 23.5.0 for the frontend build.
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '24.7.0'

      # Install the Angular CLI globally to build the project.
      - name: Install Angular CLI
        run: npm install -g @angular/cli@latest

      # Install all required dependencies for the Angular project using a clean install.
      - name: Install Dependencies
        run: |
          cd frontend/angular
          npm ci

      # Build the Angular application and output the compiled files to the "dist" directory.
      - name: Build Angular App
        run: |
          cd frontend/angular
          npx ng build --base-href "/angular/" --output-path dist/angular

      # Deploy the built Angular application to GitHub Pages.
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: frontend/angular/dist/angular/browser
